// <auto-generated />
using System;
using DoItApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoItApi.Migrations
{
    [DbContext(typeof(DoItDbContext))]
    [Migration("20190711211204_SoftDeleteForTasksAndTimestampTracking")]
    partial class SoftDeleteForTasksAndTimestampTracking
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DIA.Core.Models.AlertTime", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiaTaskId");

                    b.Property<DateTimeOffset>("Time");

                    b.HasKey("Id");

                    b.HasIndex("DiaTaskId");

                    b.ToTable("AlertTime");
                });

            modelBuilder.Entity("DIA.Core.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiaTaskId");

                    b.Property<DateTimeOffset>("InsertedTime");

                    b.Property<string>("Text")
                        .IsRequired();

                    b.Property<DateTimeOffset>("UpdatedTime");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("DiaTaskId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DIA.Core.Models.DiaTask", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("DueDateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("TaskDescription")
                        .IsRequired();

                    b.Property<DateTimeOffset>("UpdatedDate");

                    b.Property<string>("UserId");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("DIA.Core.Models.AlertTime", b =>
                {
                    b.HasOne("DIA.Core.Models.DiaTask")
                        .WithMany("AlertTimes")
                        .HasForeignKey("DiaTaskId");
                });

            modelBuilder.Entity("DIA.Core.Models.Comment", b =>
                {
                    b.HasOne("DIA.Core.Models.DiaTask")
                        .WithMany("Comments")
                        .HasForeignKey("DiaTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
